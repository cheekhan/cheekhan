{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/img/icon.jpeg","path":"img/icon.jpeg","modified":0,"renderable":0},{"_id":"node_modules/hexo-theme-fluid/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/fluid.png","path":"img/fluid.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/default.png","path":"img/default.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/police_beian.png","path":"img/police_beian.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/loading.gif","path":"img/loading.gif","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/gitalk.css","path":"css/gitalk.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight-dark.styl","path":"css/highlight-dark.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight.styl","path":"css/highlight.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/boot.js","path":"js/boot.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/events.js","path":"js/events.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/color-schema.js","path":"js/color-schema.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/img-lazyload.js","path":"js/img-lazyload.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/leancloud.js","path":"js/leancloud.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/plugins.js","path":"js/plugins.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/xml/local-search.xml","path":"xml/local-search.xml","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/图结构自动布局算法-01-graphlib使用.md","hash":"a1b5ed56b1c0d8d01b0d6e1de88587377e1f0ed8","modified":1693368392708},{"_id":"source/about/index.md","hash":"97af57e20ebe405df38186a192b09cb09d4b2ee4","modified":1693367861782},{"_id":"source/img/icon.jpeg","hash":"db16e81df1972a60f79b8dadd9bf24651b0209fd","modified":1693360062215},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_tag/tag.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1693356782764},{"_id":"node_modules/hexo-theme-fluid/LICENSE","hash":"26f9356fd6e84b5a88df6d9014378f41b65ba209","modified":1693356782491},{"_id":"node_modules/hexo-theme-fluid/README.md","hash":"49f681a203eecfa7127ac22edc13bd3b49693d0a","modified":1693356782658},{"_id":"node_modules/hexo-theme-fluid/_config.yml","hash":"cdde6c6d6a1bdf9fb965313e21d92cf6213582b6","modified":1693356782773},{"_id":"node_modules/hexo-theme-fluid/package.json","hash":"b2c283d4e9aaf9ba49b8abb81adc03117b0e07db","modified":1693356782656},{"_id":"node_modules/hexo-theme-fluid/languages/en.yml","hash":"cb11b39f44ea069652c9647179606b6cecc98d50","modified":1693356782777},{"_id":"node_modules/hexo-theme-fluid/languages/de.yml","hash":"0e7d455d9e004ff15d8924b7a0c35cea25ee5b1d","modified":1693356782775},{"_id":"node_modules/hexo-theme-fluid/languages/eo.yml","hash":"a556251cc50a5680578c03f1efbf252b1f4ab860","modified":1693356782778},{"_id":"node_modules/hexo-theme-fluid/languages/ja.yml","hash":"3dd6d20f8d26585a7c154a8e59fe8d5d902f4c6a","modified":1693356782781},{"_id":"node_modules/hexo-theme-fluid/languages/es.yml","hash":"7112594259c88c04714be152af7fd377687dad40","modified":1693356782780},{"_id":"node_modules/hexo-theme-fluid/languages/zh-CN.yml","hash":"f96a22f989897ecddc69d5867a206e1cf6b8f610","modified":1693356782783},{"_id":"node_modules/hexo-theme-fluid/languages/ru.yml","hash":"7dc78f22696649a4c68dc65a9b52d9a992fa82a0","modified":1693356782782},{"_id":"node_modules/hexo-theme-fluid/languages/zh-TW.yml","hash":"596d031dff3826ae8e4ffc8931fff28977b73247","modified":1693356782787},{"_id":"node_modules/hexo-theme-fluid/languages/zh-HK.yml","hash":"80ed400a7adaa92ea54fc7f5d534c9af795bed00","modified":1693356782785},{"_id":"node_modules/hexo-theme-fluid/layout/.DS_Store","hash":"e2295dbe42d85b294e6f3aeefaf3623bd31759ed","modified":1693356782470},{"_id":"node_modules/hexo-theme-fluid/layout/404.ejs","hash":"b84d575c7b7f778b4cb64e89ad3d0aed4a896820","modified":1693356782498},{"_id":"node_modules/hexo-theme-fluid/layout/about.ejs","hash":"163bee643e6a38912d3ae70923c83c48d57222e7","modified":1693356782499},{"_id":"node_modules/hexo-theme-fluid/layout/archive.ejs","hash":"7c1f44005849791feae4abaa10fae4cb983d3277","modified":1693356782507},{"_id":"node_modules/hexo-theme-fluid/layout/categories.ejs","hash":"13859726c27b6c79b5876ec174176d0f9c1ee164","modified":1693356782513},{"_id":"node_modules/hexo-theme-fluid/layout/category.ejs","hash":"f099161b738a16a32253f42085b5444f902018ed","modified":1693356782519},{"_id":"node_modules/hexo-theme-fluid/layout/index.ejs","hash":"9b4c154462ce78de4c9ea7dd15dce4ca8e8c1cf8","modified":1693356782544},{"_id":"node_modules/hexo-theme-fluid/layout/layout.ejs","hash":"7e0023474128fbe4d68c467704c41f1712432415","modified":1693356782546},{"_id":"node_modules/hexo-theme-fluid/layout/page.ejs","hash":"ed5007a3feb8f14d3d2843271bfb298eb0c56219","modified":1693356782563},{"_id":"node_modules/hexo-theme-fluid/layout/links.ejs","hash":"1cac32ec4579aaf7b9fa39d317497331d4c5e1dd","modified":1693356782549},{"_id":"node_modules/hexo-theme-fluid/layout/post.ejs","hash":"75ab6958d929e92566ca580d0b8bd0eeae10649a","modified":1693356782565},{"_id":"node_modules/hexo-theme-fluid/layout/tag.ejs","hash":"9d686364c4d16a1a9219471623af452035c5b966","modified":1693356782578},{"_id":"node_modules/hexo-theme-fluid/layout/tags.ejs","hash":"1d06af34b6cf1d8a20d2eb565e309326ceba309f","modified":1693356782579},{"_id":"node_modules/hexo-theme-fluid/scripts/.DS_Store","hash":"daec53fd4601c37ca272321ba2eb594d9b0a43ac","modified":1693356782473},{"_id":"node_modules/hexo-theme-fluid/source/.DS_Store","hash":"e11e97632e6d13d5b9dccadcc514268f3c039508","modified":1693356782485},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/archive-list.ejs","hash":"7520fbf91f762207c2ab06b2c293235cd5b23905","modified":1693356782506},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/category-chains.ejs","hash":"18309584aab83bc4deb20723ebad832149dd2e24","modified":1693356782516},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/category-list.ejs","hash":"f8d2f1907450e61968e6d54443e9be8138196a77","modified":1693356782518},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments.ejs","hash":"d707c47b2638c94e489bc43d4cfd098b7c58447f","modified":1693356782523},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/css.ejs","hash":"85f6e051550907681ab4ed2e268ac8f6e9ebf931","modified":1693356782526},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer.ejs","hash":"10ccfb8eef4e16182183c9a3e175c90d5b6397d3","modified":1693356782534},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/head.ejs","hash":"7b7b1d098726e86687a15fe3d520d178577ffcae","modified":1693356782539},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header.ejs","hash":"0d5e397d30051e5fbabe7b47cfd1f1e6a5820af1","modified":1693356782541},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/paginator.ejs","hash":"0f38a2c238169edcb63fc46c23bfc529ff3859b7","modified":1693356782564},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/markdown-plugins.ejs","hash":"fc4bdf7de0cf1a66d0e5e4fba1b31d6f7ed49468","modified":1693356782553},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/scripts.ejs","hash":"da5810785105e5075861593c7ac22c7aa9665a72","modified":1693356782570},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/search.ejs","hash":"70e1c929e084ca8a2648cedabf29b372511ea2b8","modified":1693356782571},{"_id":"node_modules/hexo-theme-fluid/scripts/events/.DS_Store","hash":"80308812974d7cb7e001cd8f64ff9fced30ff139","modified":1693356782478},{"_id":"node_modules/hexo-theme-fluid/scripts/events/index.js","hash":"79de5a379b28cad759a49048351c7f6b8915bd7d","modified":1693356782622},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/default-injects.js","hash":"b2013ae8e189cd07ebc8a2ff48a78e153345210f","modified":1693356782608},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/locals.js","hash":"58d0fec976f6b1d35e7ea03edc45414088acf05c","modified":1693356782633},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/post-filter.js","hash":"0047666f996c54017e06668b5242ed8a311ebce0","modified":1693356782647},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/index-generator.js","hash":"9159fc22fa84a7b605dd15fe4104f01fe9c71147","modified":1693356782621},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/local-search.js","hash":"9ac5ddad06e9b0e6015ce531430018182a4bc0fa","modified":1693356782629},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/pages.js","hash":"d3e75f53c59674d171309e50702954671f31f1a4","modified":1693356782643},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/button.js","hash":"3eb43a8cdea0a64576ad6b31b4df6c2bf5698d4c","modified":1693356782597},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/checkbox.js","hash":"4938610c3543a921a341bc074626d511cb1a4b45","modified":1693356782599},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/group-image.js","hash":"4aeebb797026f1df25646a5d69f7fde79b1bcd26","modified":1693356782614},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/label.js","hash":"f05a6d32cca79535b22907dc03edb9d3fa2d8176","modified":1693356782625},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/mermaid.js","hash":"75160561e1ef3603b6d2ad2938464ab1cb77fd38","modified":1693356782636},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/note.js","hash":"e3b456a079e5dc0032473b516c865b20f83d2c26","modified":1693356782638},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/date.js","hash":"9bda6382f61b40a20c24af466fe10c8366ebb74c","modified":1693356782606},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/engine.js","hash":"d3a231d106795ce99cb0bc77eb65f9ae44515933","modified":1693356782609},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/export-config.js","hash":"8e67b522c47aa250860e3fe2c733f1f958a506c0","modified":1693356782612},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/import.js","hash":"ca53e8dbf7d44cfd372cfa79ac60f35a7d5b0076","modified":1693356782619},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/injects.js","hash":"1ad2ae6b11bd8806ee7dd6eb7140d8b54a95d613","modified":1693356782624},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/page.js","hash":"4607607445233b3029ef20ed5e91de0da0a7f9c5","modified":1693356782641},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/scope.js","hash":"d41d9d658fcb54964b388598e996747aadb85b0f","modified":1693356782649},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/url.js","hash":"2a6a8288176d0e0f6ec008056bf2745a86e8943e","modified":1693356782651},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/utils.js","hash":"226f99b465ff513de075a8e78b321d6cb62592ca","modified":1693356782653},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/wordcount.js","hash":"4543b8954c5c2ca91191cc0d53cf071b3f26faaa","modified":1693356782655},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1693356782481},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/compare-versions.js","hash":"dbbc928c914fc2bd242cd66aa0c45971aec13a5d","modified":1693356782603},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/resolve.js","hash":"8c4a8b62aa8608f12f1e9046231dff04859dc3e9","modified":1693356782648},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/object.js","hash":"33b57e4decdc5e75c518859f168c8ba80b2c665b","modified":1693356782639},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/url-join.js","hash":"718aab5e7b2059a06b093ca738de420d9afa44ba","modified":1693356782650},{"_id":"node_modules/hexo-theme-fluid/source/img/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1693356782488},{"_id":"node_modules/hexo-theme-fluid/source/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1693356782660},{"_id":"node_modules/hexo-theme-fluid/source/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1693356782695},{"_id":"node_modules/hexo-theme-fluid/source/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1693356782697},{"_id":"node_modules/hexo-theme-fluid/source/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1693356782594},{"_id":"node_modules/hexo-theme-fluid/source/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1693356782495},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight-dark.styl","hash":"45695ef75c31a4aa57324dd408b7e2327a337018","modified":1693356782738},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight.styl","hash":"a9efc52a646a9e585439c768557e3e3c9e3326dc","modified":1693356782741},{"_id":"node_modules/hexo-theme-fluid/source/css/main.styl","hash":"855ae5fe229c51afa57f7645f6997a27a705d7e4","modified":1693356782749},{"_id":"node_modules/hexo-theme-fluid/source/js/boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":1693356782596},{"_id":"node_modules/hexo-theme-fluid/source/js/events.js","hash":"89e3561488a618ed0caeb9edf18e441978e29c25","modified":1693356782611},{"_id":"node_modules/hexo-theme-fluid/source/js/color-schema.js","hash":"76a198f8721352ebeaf5b2ef2f4db00612da4796","modified":1693356782601},{"_id":"node_modules/hexo-theme-fluid/source/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1693356782618},{"_id":"node_modules/hexo-theme-fluid/source/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1693356782628},{"_id":"node_modules/hexo-theme-fluid/source/js/local-search.js","hash":"b9945f76f8682f3ec32edfb285b26eb559f7b7e8","modified":1693356782632},{"_id":"node_modules/hexo-theme-fluid/source/js/plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":1693356782645},{"_id":"node_modules/hexo-theme-fluid/source/js/utils.js","hash":"b82e7c289a66dfd36064470fd41c0e96fc598b43","modified":1693356782654},{"_id":"node_modules/hexo-theme-fluid/source/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1693356782770},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/changyan.ejs","hash":"c9b2d68ed3d375f1953e7007307d2a3f75ed6249","modified":1693356782521},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/cusdis.ejs","hash":"5f9dc012be27040bbe874d0c093c0d53958cc987","modified":1693356782528},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/discuss.ejs","hash":"98d065b58ce06b7d18bff3c974e96fa0f34ae03a","modified":1693356782529},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/disqus.ejs","hash":"aab4a4d24c55231a37db308ae94414319cecdd9b","modified":1693356782530},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/giscus.ejs","hash":"95f8b866b158eff9352c381c243b332a155a5110","modified":1693356782536},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/gitalk.ejs","hash":"843bc141a4545eb20d1c92fb63c85d459b4271ec","modified":1693356782538},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/remark42.ejs","hash":"d4e9532feeb02aed61bd15eda536b5b631454dac","modified":1693356782568},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/livere.ejs","hash":"2264758fed57542a7389c7aa9f00f1aefa17eb87","modified":1693356782551},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/twikoo.ejs","hash":"d84bcb5ccd78470a60c067fc914ac0ac67ac8777","modified":1693356782582},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/utterances.ejs","hash":"c7ccf7f28308334a6da6f5425b141a24b5eca0e2","modified":1693356782587},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/valine.ejs","hash":"19ba937553dddd317f827d682661a1066a7b1f30","modified":1693356782588},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/waline.ejs","hash":"12727da7cf3ac83443270f550be4d1c06135b52b","modified":1693356782590},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer/beian.ejs","hash":"4fb9b5dd3f3e41a586d6af44e5069afe7c81fff2","modified":1693356782512},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer/statistics.ejs","hash":"454d8dd4c39f9494ebeb03ca0746f5bc122af76a","modified":1693356782577},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header/banner.ejs","hash":"e07757b59e7b89eea213d0e595cb5932f812fd32","modified":1693356782510},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header/navigation.ejs","hash":"870db75e4e403a840c4463dfeed2c9114846e7cc","modified":1693356782561},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/analytics.ejs","hash":"4f68c80bd1395e2f6d11e373116e54de11cb62e8","modified":1693356782502},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/anchorjs.ejs","hash":"40181442d3a2b8734783a0ad7caf2d2522e3f2ab","modified":1693356782504},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/code-widget.ejs","hash":"3a505cba37942badf62a56bbb8b605b72af330aa","modified":1693356782522},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/encrypt.ejs","hash":"0fff24cf5bf99fbe5c56c292e2eac4a89bf29db4","modified":1693356782531},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/fancybox.ejs","hash":"9d1ea2a46b8c8ad8c168594d578f40764818ef13","modified":1693356782533},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/highlight.ejs","hash":"7529dd215b09d3557804333942377b9e20fa554e","modified":1693356782542},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/math.ejs","hash":"dcbf9a381ee76f2f1f75fcbc22c50a502ec85023","modified":1693356782556},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/mermaid.ejs","hash":"03ac02762f801970d1c4e73d6ec8d4c503780e50","modified":1693356782557},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/nprogress.ejs","hash":"4c2d39ce816b8a6dcd6b53113c8695f8bd650a23","modified":1693356782562},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/typed.ejs","hash":"f345374885cd6a334f09a11f59c443b5d577c06c","modified":1693356782585},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/copyright.ejs","hash":"529f3069742b3d338c769ba2d836e7f3c342a09d","modified":1693356782525},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/category-bar.ejs","hash":"8772bce97ed297e7a88523f4e939ed6436c22f87","modified":1693356782515},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/meta-bottom.ejs","hash":"375974ec017696e294dc12469fb0ae257800dc2d","modified":1693356782558},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/meta-top.ejs","hash":"ce6e9f578f4faa45840abddf8f46af3f4b69c177","modified":1693356782560},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/sidebar-left.ejs","hash":"9992c99b3eb728ad195970e1b84d665f2c8691c4","modified":1693356782573},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/sidebar-right.ejs","hash":"d5fcc9b60e02f869a29a8c17a16a6028ecc1e6d8","modified":1693356782575},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/toc.ejs","hash":"635a89060fbf72eeda066fc4bd0a97462f069417","modified":1693356782581},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/compatible-configs.js","hash":"ef474d1fa5bbafc52619ced0f9dc7eaf2affb363","modified":1693356782605},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/footnote.js","hash":"b2f61b91fffb17d11ad56811f07d52d23f012741","modified":1693356782613},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/hello.js","hash":"44c5eb97b98813a07c659d6afedd17fad63b1821","modified":1693356782615},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/highlight.js","hash":"8d3ae1ec6660fbb0e563bc08c2f8deefde1f3bf6","modified":1693356782617},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/injects.js","hash":"5ae4b07204683e54b5a1b74e931702bbce2ac23e","modified":1693356782623},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/lazyload.js","hash":"9ba0d4bc224e22af8a5a48d6ff13e5a0fcfee2a4","modified":1693356782627},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/merge-configs.js","hash":"7c944c43b2ece5dd84859bd9d1fe955d13427387","modified":1693356782635},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/pages.styl","hash":"b8e887bc7fb3b765a1f8ec9448eff8603a41984f","modified":1693356782756},{"_id":"node_modules/hexo-theme-fluid/source/css/_functions/base.styl","hash":"2e46f3f4e2c9fe34c1ff1c598738fc7349ae8188","modified":1693356782708},{"_id":"node_modules/hexo-theme-fluid/source/css/_variables/base.styl","hash":"4ed5f0ae105ef4c7dd92eaf652ceda176c38e502","modified":1693356782715},{"_id":"node_modules/hexo-theme-fluid/source/css/_mixins/base.styl","hash":"542e306ee9494e8a78e44d6d7d409605d94caeb3","modified":1693356782710},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_about/about.styl","hash":"97fe42516ea531fdad771489b68aa8b2a7f6ae46","modified":1693356782700},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_archive/archive.styl","hash":"c475e6681546d30350eaed11f23081ecae80c375","modified":1693356782705},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/base.styl","hash":"643284c567665f96915f0b64e59934dda315f74d","modified":1693356782713},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/color-schema.styl","hash":"e413212e5a667d5b8299c4d2a39c4dfa1378d119","modified":1693356782726},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/inline.styl","hash":"411a3fa3f924a87e00ff04d18b5c83283b049a4d","modified":1693356782744},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/keyframes.styl","hash":"94065ea50f5bef7566d184f2422f6ac20866ba22","modified":1693356782745},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/print.styl","hash":"166afbc596ea4b552bad7290ec372d25ec34db7b","modified":1693356782760},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_index/index.styl","hash":"0acbd71633bcc7191672ea4e1b2277bea350d73b","modified":1693356782743},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-bar.styl","hash":"cc6df43fef6bb3efecbfdd8b9e467424a1dea581","modified":1693356782719},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-chain.styl","hash":"0cdf7ef50dfd0669d3b257821384ff31cd81b7c9","modified":1693356782720},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-list.styl","hash":"7edfe1b571ecca7d08f5f4dbcf76f4ffdcfbf0b5","modified":1693356782722},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_links/links.styl","hash":"5c7f2044e3f1da05a3229537c06bd879836f8d6e","modified":1693356782748},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/comment.styl","hash":"780f3788e7357bcd3f3262d781cb91bb53976a93","modified":1693356782728},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/highlight.styl","hash":"4df764d298fe556e501db4afc2b05686fe6ebcfb","modified":1693356782739},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/markdown.styl","hash":"1e3d3a82721e7c10bcfcecec6d81cf2979039452","modified":1693356782751},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/post-page.styl","hash":"ecf3488566b374d564ae985c61e08562ba908023","modified":1693356782758},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/post-tag.styl","hash":"27f70062415ccf66a9b6f4952db124fc1471fda5","modified":1693356782759},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_tag/tags.styl","hash":"65bfc01c76abc927fa1a23bf2422892b0d566c3f","modified":1693356782765},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/anchorjs.styl","hash":"e0cebda4a6f499aff75e71417d88caa7ceb13b94","modified":1693356782703},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/banner.styl","hash":"7a0bd629bc234fc75e3cc8e3715ffada92f09e73","modified":1693356782707},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/board.styl","hash":"4397037fc3f0033dbe546c33cd9dbdabd8cb1632","modified":1693356782716},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/code-widget.styl","hash":"b66ab013f0f37d724a149b85b3c7432afcf460ad","modified":1693356782723},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/copyright.styl","hash":"26f71a9cd60d96bb0cb5bbdf58150b8e524d9707","modified":1693356782730},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/footer.styl","hash":"2caaca71dd1ff63d583099ed817677dd267b457e","modified":1693356782732},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/header.styl","hash":"c4459248c66ea1326feed021179b847ae91d465f","modified":1693356782737},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/footnote.styl","hash":"ae9289cc89649af2042907f8a003303b987f3404","modified":1693356782734},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/modal.styl","hash":"adf6c1e5c8e1fb41c77ce6e2258001df61245aa2","modified":1693356782752},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/ngrogress.styl","hash":"5d225357b4a58d46118e6616377168336ed44cb2","modified":1693356782753},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/pagination.styl","hash":"8bb1b68e5f3552cb48c2ffa31edbc53646a8fb4c","modified":1693356782757},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/noscript.styl","hash":"0cf2f2bb44f456150d428016675d5876a9d2e2aa","modified":1693356782754},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/qrcode.styl","hash":"78704a94c0436097abfb0e0a57abeb3429c749b7","modified":1693356782761},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/scroll-btn.styl","hash":"f0e429a27fa8a7658fcbddbb4d4dbe4afa12499a","modified":1693356782762},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/search.styl","hash":"10f7e91a91e681fb9fe46f9df7707b9ef78707c8","modified":1693356782763},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/toc.styl","hash":"9e7452aa2372153f25d7a4675c9d36d281a65d24","modified":1693356782767},{"_id":"node_modules/hexo-theme-fluid/source/img/default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":1693356782693},{"_id":"public/local-search.xml","hash":"0e81cee72fbaa14e14dd0f3c05b11fc63f38d1c4","modified":1693368407569},{"_id":"public/about/index.html","hash":"47b373f1b9c7404f37777983ba863fe4caa07307","modified":1693368407569},{"_id":"public/404.html","hash":"8386eb4662572117a5ffc628f37db56014031a8c","modified":1693368407569},{"_id":"public/tags/index.html","hash":"f9b2f9b212e28f4a1eb2b082ae1ba81ec24b7ee1","modified":1693368407569},{"_id":"public/categories/index.html","hash":"c67e7cdaf8f5e1df5c00590cb964f1b61e6beb7f","modified":1693368407569},{"_id":"public/links/index.html","hash":"92e7a851fe577ce61a62c5c7bbaf16b296d0fa6d","modified":1693368407569},{"_id":"public/img/icon.jpeg","hash":"db16e81df1972a60f79b8dadd9bf24651b0209fd","modified":1693368407569},{"_id":"public/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1693368407569},{"_id":"public/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1693368407569},{"_id":"public/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1693368407569},{"_id":"public/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1693368407569},{"_id":"public/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1693368407569},{"_id":"public/css/highlight-dark.css","hash":"2b0daa6e5343da9dbb26d617d224b8397e48556b","modified":1693368407569},{"_id":"public/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1693368407569},{"_id":"public/css/highlight.css","hash":"0f9a477d33d3b15ebe7e163e756fb7c54c7ded6b","modified":1693368407569},{"_id":"public/js/boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":1693368407569},{"_id":"public/js/events.js","hash":"89e3561488a618ed0caeb9edf18e441978e29c25","modified":1693368407569},{"_id":"public/js/color-schema.js","hash":"76a198f8721352ebeaf5b2ef2f4db00612da4796","modified":1693368407569},{"_id":"public/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1693368407569},{"_id":"public/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1693368407569},{"_id":"public/js/local-search.js","hash":"b9945f76f8682f3ec32edfb285b26eb559f7b7e8","modified":1693368407569},{"_id":"public/js/plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":1693368407569},{"_id":"public/js/utils.js","hash":"b82e7c289a66dfd36064470fd41c0e96fc598b43","modified":1693368407569},{"_id":"public/css/main.css","hash":"526a4522eb54bb51772f51fb98295dc4fe03429f","modified":1693368407569},{"_id":"public/img/default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":1693368407569}],"Category":[{"name":"可视化","_id":"cllx7u0g40001ecvi0vg0gc1p"}],"Data":[],"Page":[{"title":"关于我","date":"2023-08-30T00:55:45.000Z","layout":"about","comment":true,"_content":"\n### <center>一个啥也不太会的前端</center>\n### <center>目录组织工程师</center>\n### <center>写写组件，调调页面</center>\n### <center>偶尔学学python</center>\n### <center>布鲁buibui~~</center>\n","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2023-08-30 08:55:45\nlayout: about\ncomment: true\n---\n\n### <center>一个啥也不太会的前端</center>\n### <center>目录组织工程师</center>\n### <center>写写组件，调调页面</center>\n### <center>偶尔学学python</center>\n### <center>布鲁buibui~~</center>\n","updated":"2023-08-30T03:57:41.782Z","path":"about/index.html","comments":1,"_id":"cllx7tu2a0000hgvi3i85bkut","content":"<h3 id=\"一个啥也不太会的前端\"><a href=\"#一个啥也不太会的前端\" class=\"headerlink\" title=\"一个啥也不太会的前端\"></a><center>一个啥也不太会的前端</center></h3><h3 id=\"目录组织工程师\"><a href=\"#目录组织工程师\" class=\"headerlink\" title=\"目录组织工程师\"></a><center>目录组织工程师</center></h3><h3 id=\"写写组件，调调页面\"><a href=\"#写写组件，调调页面\" class=\"headerlink\" title=\"写写组件，调调页面\"></a><center>写写组件，调调页面</center></h3><h3 id=\"偶尔学学python\"><a href=\"#偶尔学学python\" class=\"headerlink\" title=\"偶尔学学python\"></a><center>偶尔学学python</center></h3><h3 id=\"布鲁buibui\"><a href=\"#布鲁buibui\" class=\"headerlink\" title=\"布鲁buibui~~\"></a><center>布鲁buibui~~</center></h3>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"一个啥也不太会的前端\"><a href=\"#一个啥也不太会的前端\" class=\"headerlink\" title=\"一个啥也不太会的前端\"></a><center>一个啥也不太会的前端</center></h3><h3 id=\"目录组织工程师\"><a href=\"#目录组织工程师\" class=\"headerlink\" title=\"目录组织工程师\"></a><center>目录组织工程师</center></h3><h3 id=\"写写组件，调调页面\"><a href=\"#写写组件，调调页面\" class=\"headerlink\" title=\"写写组件，调调页面\"></a><center>写写组件，调调页面</center></h3><h3 id=\"偶尔学学python\"><a href=\"#偶尔学学python\" class=\"headerlink\" title=\"偶尔学学python\"></a><center>偶尔学学python</center></h3><h3 id=\"布鲁buibui\"><a href=\"#布鲁buibui\" class=\"headerlink\" title=\"布鲁buibui~~\"></a><center>布鲁buibui~~</center></h3>"}],"Post":[{"title":"图结构自动布局算法-01-graphlib使用","date":"2023-08-30T01:40:42.000Z","comment":true,"excerpt":"graphlib和dagre库，是我们在对图结构数据进行操作和布局时，必不可少的两个函数库。通过这两个函数库，我们可以 轻松的对图结构的数据进行组装和绘制。其中dagre库内置了很多算法，例如network-simplex、longest-path等算法.","_content":"\n# 一、graphlib\n\n> https://juejin.cn/post/7079732431116304397#heading-44\n\n导出内容：\n- `Graph` : Graph类，提供了图的各种操作方法\n-  `json` : 工具函数，用于图转为json，或者由json格式化一个图\n-   `alg` : 图的各种算法实现\n\n## 1、`Graph`类\n\n### 构造函数\n```ts\ndirected?: boolean; // default: true. 是否为有向图\nmultigraph?: boolean; // default: false.两节点之间，是否允许多个边\ncompound?: boolean; // default: false.图是否允许复合点\n```\n\n### 实例方法\n`graph.setGraph(value)`:\n> 设置整个graph的值，一些graph的参数，如宽高等，一般是设置一个空对象\n\n`graph.graph()`:\n> 获取graph的值\n\n`graph.setNode(node_id,[value])`:\n> 在图中创建或更新节点的值，\n\n`graph.removeNode(node_id)`:\n> 移除某个节点，同时会移除这个节点的边\n\n`graph.setEdge(node_id1,node_id2,label,[name])`:\n> 给两个节点设置或更新边信息\n\n`graph.removeEdge(node_id1,node_id2)`:\n> 移除两个节点的边\n\n`graph.setDefaultNodeLabel(obj)`:\n> 设置一个默认的节点value,可以是一个函数(node)=>obj\n\n`graph.setDefaultEdgeLabel(obj)`:\n> 给边设置一个默认的节点\n\n`graph.nodes()`:\n> 获取所有的节点，返回节点id的列表\n\n`graph.node(id)`:\n> 根据id，查询节点信息\n\n`graph.edges()`:\n> 获取所有的边，返回边列表\n\n`graph.edge(source_id,target_id)`:\n> 根据起始的节点id，查询一条边\n\n`graph.sources()`:\n> 返回没有入边的节点\n\n`graph.sinks()`:\n> 返回所有没有出边的节点\n\n`graph.predecessors(node_id)`:\n> 返回当前节点的所有的祖先节点\n\n`graph.parent(node_id)`:\n> 返回当前节点的父节点（TODO: 和predecessors区别是什么）\n\n`graph.successors(node_id)`:\n> 返回当前节点的所有后序节点\n\n`graph.children(node_id)`:\n> 返回当前节点的所有子节点\n\n`graph.inEdges(node_id)`:\n> 查询某个节点的所有入边\n\n`graph.outEdges(node_id)`:\n> 查询某个节点的所有出边\n\n`graph.nodeEdges(node_id)`:\n> 查询某个节点，所有的边，包括入边和出边\n\n## 2、`alg`算法工具类\n\n## 3、`json`转换工具\n\n`json.write(graph)`:\n> 根据图，生成一个json，json包括了options、nodes、edges\n\n`json.read(json)`:\n> 根据一段json结构，生成一个graph\n\n\n# 二、dagre\n> https://github.com/dagrejs/dagre/wiki\n\n## `layout`方法\n`layout(graph,config)=>`:\n\n生成绘制树，config参数说明如下：\n| 值          | 默认值            | 说明                                                                             |\n| ----------- | ----------------- | -------------------------------------------------------------------------------- |\n| rankdir     | TB                | 排列节点的方向，T是上，B是下，L是左，R是右                                       |\n| align       | undefined         | 排列节点的对齐方式，U=上，D=下，L=左，R=右                                       |\n| nodesep     | 50                | 节点的水平间距                                                                   |\n| edgesep     | 10                | 线的水平间距                                                                     |\n| ranksep     | 50                | 排列间距，就是层间距                                                             |\n| marginx     | 0                 | 图的左右间距                                                                     |\n| marginy     | 0                 | 图上下间距                                                                       |\n| acyclicer   | undefined         | 环模式，如果设置为`greedy`，则会返回可移除的边列表，使图无环                     |\n| ranker      | `network-simplex` | 使用哪种布局算法，默认是`network-simplex`，可选的还有`tight-tree`,`longest-path` |\n| width       | 0                 | 节点宽度                                                                         |\n| height      | 0                 | 节点高度                                                                         |\n| minlen      | 1                 | 线的最小长度                                                                     |\n| weight      | 1                 | 线的权重，权重越高，线越短直                                                     |\n| width       | 0                 | 线的label的宽度                                                                  |\n| height      | 0                 | 线的label的高度                                                                  |\n| labelpos    | `r`               | 线的label的位置，l=左，c=中间，r=右侧                                            |\n| labeloffset | 10                | label和边的距离，当label的定位是`l`和`r`时生效                                   |\n\n生成布局图的一些属性\n| 范围       | 值     | 说明                             |\n| ---------- | ------ | -------------------------------- |\n| graph      | height | 图的高度                         |\n| graph      | width  | 图的宽度                         |\n| node，edge | x，y   | 节点的中心坐标，或者线的中心坐标 |\n| edge       | points | {x，y}构成的线的控制点           |\n\n\t","source":"_posts/图结构自动布局算法-01-graphlib使用.md","raw":"---\ntitle: 图结构自动布局算法-01-graphlib使用\ndate: 2023-08-30 09:40:42\ncomment: true\ntags: \n\t- 算法\n\t- 图结构自动布局\ncategories: 可视化\nexcerpt: graphlib和dagre库，是我们在对图结构数据进行操作和布局时，必不可少的两个函数库。通过这两个函数库，我们可以\n    轻松的对图结构的数据进行组装和绘制。其中dagre库内置了很多算法，例如network-simplex、longest-path等算法.\n---\n\n# 一、graphlib\n\n> https://juejin.cn/post/7079732431116304397#heading-44\n\n导出内容：\n- `Graph` : Graph类，提供了图的各种操作方法\n-  `json` : 工具函数，用于图转为json，或者由json格式化一个图\n-   `alg` : 图的各种算法实现\n\n## 1、`Graph`类\n\n### 构造函数\n```ts\ndirected?: boolean; // default: true. 是否为有向图\nmultigraph?: boolean; // default: false.两节点之间，是否允许多个边\ncompound?: boolean; // default: false.图是否允许复合点\n```\n\n### 实例方法\n`graph.setGraph(value)`:\n> 设置整个graph的值，一些graph的参数，如宽高等，一般是设置一个空对象\n\n`graph.graph()`:\n> 获取graph的值\n\n`graph.setNode(node_id,[value])`:\n> 在图中创建或更新节点的值，\n\n`graph.removeNode(node_id)`:\n> 移除某个节点，同时会移除这个节点的边\n\n`graph.setEdge(node_id1,node_id2,label,[name])`:\n> 给两个节点设置或更新边信息\n\n`graph.removeEdge(node_id1,node_id2)`:\n> 移除两个节点的边\n\n`graph.setDefaultNodeLabel(obj)`:\n> 设置一个默认的节点value,可以是一个函数(node)=>obj\n\n`graph.setDefaultEdgeLabel(obj)`:\n> 给边设置一个默认的节点\n\n`graph.nodes()`:\n> 获取所有的节点，返回节点id的列表\n\n`graph.node(id)`:\n> 根据id，查询节点信息\n\n`graph.edges()`:\n> 获取所有的边，返回边列表\n\n`graph.edge(source_id,target_id)`:\n> 根据起始的节点id，查询一条边\n\n`graph.sources()`:\n> 返回没有入边的节点\n\n`graph.sinks()`:\n> 返回所有没有出边的节点\n\n`graph.predecessors(node_id)`:\n> 返回当前节点的所有的祖先节点\n\n`graph.parent(node_id)`:\n> 返回当前节点的父节点（TODO: 和predecessors区别是什么）\n\n`graph.successors(node_id)`:\n> 返回当前节点的所有后序节点\n\n`graph.children(node_id)`:\n> 返回当前节点的所有子节点\n\n`graph.inEdges(node_id)`:\n> 查询某个节点的所有入边\n\n`graph.outEdges(node_id)`:\n> 查询某个节点的所有出边\n\n`graph.nodeEdges(node_id)`:\n> 查询某个节点，所有的边，包括入边和出边\n\n## 2、`alg`算法工具类\n\n## 3、`json`转换工具\n\n`json.write(graph)`:\n> 根据图，生成一个json，json包括了options、nodes、edges\n\n`json.read(json)`:\n> 根据一段json结构，生成一个graph\n\n\n# 二、dagre\n> https://github.com/dagrejs/dagre/wiki\n\n## `layout`方法\n`layout(graph,config)=>`:\n\n生成绘制树，config参数说明如下：\n| 值          | 默认值            | 说明                                                                             |\n| ----------- | ----------------- | -------------------------------------------------------------------------------- |\n| rankdir     | TB                | 排列节点的方向，T是上，B是下，L是左，R是右                                       |\n| align       | undefined         | 排列节点的对齐方式，U=上，D=下，L=左，R=右                                       |\n| nodesep     | 50                | 节点的水平间距                                                                   |\n| edgesep     | 10                | 线的水平间距                                                                     |\n| ranksep     | 50                | 排列间距，就是层间距                                                             |\n| marginx     | 0                 | 图的左右间距                                                                     |\n| marginy     | 0                 | 图上下间距                                                                       |\n| acyclicer   | undefined         | 环模式，如果设置为`greedy`，则会返回可移除的边列表，使图无环                     |\n| ranker      | `network-simplex` | 使用哪种布局算法，默认是`network-simplex`，可选的还有`tight-tree`,`longest-path` |\n| width       | 0                 | 节点宽度                                                                         |\n| height      | 0                 | 节点高度                                                                         |\n| minlen      | 1                 | 线的最小长度                                                                     |\n| weight      | 1                 | 线的权重，权重越高，线越短直                                                     |\n| width       | 0                 | 线的label的宽度                                                                  |\n| height      | 0                 | 线的label的高度                                                                  |\n| labelpos    | `r`               | 线的label的位置，l=左，c=中间，r=右侧                                            |\n| labeloffset | 10                | label和边的距离，当label的定位是`l`和`r`时生效                                   |\n\n生成布局图的一些属性\n| 范围       | 值     | 说明                             |\n| ---------- | ------ | -------------------------------- |\n| graph      | height | 图的高度                         |\n| graph      | width  | 图的宽度                         |\n| node，edge | x，y   | 节点的中心坐标，或者线的中心坐标 |\n| edge       | points | {x，y}构成的线的控制点           |\n\n\t","slug":"图结构自动布局算法-01-graphlib使用","published":1,"updated":"2023-08-30T04:07:14.092Z","_id":"cllx7u0g00000ecvic0r2hu1l","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"一、graphlib\"><a href=\"#一、graphlib\" class=\"headerlink\" title=\"一、graphlib\"></a>一、graphlib</h1><blockquote>\n<p><a href=\"https://juejin.cn/post/7079732431116304397#heading-44\">https://juejin.cn/post/7079732431116304397#heading-44</a></p>\n</blockquote>\n<p>导出内容：</p>\n<ul>\n<li><code>Graph</code> : Graph类，提供了图的各种操作方法</li>\n<li><code>json</code> : 工具函数，用于图转为json，或者由json格式化一个图</li>\n<li><code>alg</code> : 图的各种算法实现</li>\n</ul>\n<h2 id=\"1、Graph类\"><a href=\"#1、Graph类\" class=\"headerlink\" title=\"1、Graph类\"></a>1、<code>Graph</code>类</h2><h3 id=\"构造函数\"><a href=\"#构造函数\" class=\"headerlink\" title=\"构造函数\"></a>构造函数</h3><figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ts\">directed?: <span class=\"hljs-built_in\">boolean</span>; <span class=\"hljs-comment\">// default: true. 是否为有向图</span><br>multigraph?: <span class=\"hljs-built_in\">boolean</span>; <span class=\"hljs-comment\">// default: false.两节点之间，是否允许多个边</span><br>compound?: <span class=\"hljs-built_in\">boolean</span>; <span class=\"hljs-comment\">// default: false.图是否允许复合点</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"实例方法\"><a href=\"#实例方法\" class=\"headerlink\" title=\"实例方法\"></a>实例方法</h3><p><code>graph.setGraph(value)</code>:</p>\n<blockquote>\n<p>设置整个graph的值，一些graph的参数，如宽高等，一般是设置一个空对象</p>\n</blockquote>\n<p><code>graph.graph()</code>:</p>\n<blockquote>\n<p>获取graph的值</p>\n</blockquote>\n<p><code>graph.setNode(node_id,[value])</code>:</p>\n<blockquote>\n<p>在图中创建或更新节点的值，</p>\n</blockquote>\n<p><code>graph.removeNode(node_id)</code>:</p>\n<blockquote>\n<p>移除某个节点，同时会移除这个节点的边</p>\n</blockquote>\n<p><code>graph.setEdge(node_id1,node_id2,label,[name])</code>:</p>\n<blockquote>\n<p>给两个节点设置或更新边信息</p>\n</blockquote>\n<p><code>graph.removeEdge(node_id1,node_id2)</code>:</p>\n<blockquote>\n<p>移除两个节点的边</p>\n</blockquote>\n<p><code>graph.setDefaultNodeLabel(obj)</code>:</p>\n<blockquote>\n<p>设置一个默认的节点value,可以是一个函数(node)&#x3D;&gt;obj</p>\n</blockquote>\n<p><code>graph.setDefaultEdgeLabel(obj)</code>:</p>\n<blockquote>\n<p>给边设置一个默认的节点</p>\n</blockquote>\n<p><code>graph.nodes()</code>:</p>\n<blockquote>\n<p>获取所有的节点，返回节点id的列表</p>\n</blockquote>\n<p><code>graph.node(id)</code>:</p>\n<blockquote>\n<p>根据id，查询节点信息</p>\n</blockquote>\n<p><code>graph.edges()</code>:</p>\n<blockquote>\n<p>获取所有的边，返回边列表</p>\n</blockquote>\n<p><code>graph.edge(source_id,target_id)</code>:</p>\n<blockquote>\n<p>根据起始的节点id，查询一条边</p>\n</blockquote>\n<p><code>graph.sources()</code>:</p>\n<blockquote>\n<p>返回没有入边的节点</p>\n</blockquote>\n<p><code>graph.sinks()</code>:</p>\n<blockquote>\n<p>返回所有没有出边的节点</p>\n</blockquote>\n<p><code>graph.predecessors(node_id)</code>:</p>\n<blockquote>\n<p>返回当前节点的所有的祖先节点</p>\n</blockquote>\n<p><code>graph.parent(node_id)</code>:</p>\n<blockquote>\n<p>返回当前节点的父节点（TODO: 和predecessors区别是什么）</p>\n</blockquote>\n<p><code>graph.successors(node_id)</code>:</p>\n<blockquote>\n<p>返回当前节点的所有后序节点</p>\n</blockquote>\n<p><code>graph.children(node_id)</code>:</p>\n<blockquote>\n<p>返回当前节点的所有子节点</p>\n</blockquote>\n<p><code>graph.inEdges(node_id)</code>:</p>\n<blockquote>\n<p>查询某个节点的所有入边</p>\n</blockquote>\n<p><code>graph.outEdges(node_id)</code>:</p>\n<blockquote>\n<p>查询某个节点的所有出边</p>\n</blockquote>\n<p><code>graph.nodeEdges(node_id)</code>:</p>\n<blockquote>\n<p>查询某个节点，所有的边，包括入边和出边</p>\n</blockquote>\n<h2 id=\"2、alg算法工具类\"><a href=\"#2、alg算法工具类\" class=\"headerlink\" title=\"2、alg算法工具类\"></a>2、<code>alg</code>算法工具类</h2><h2 id=\"3、json转换工具\"><a href=\"#3、json转换工具\" class=\"headerlink\" title=\"3、json转换工具\"></a>3、<code>json</code>转换工具</h2><p><code>json.write(graph)</code>:</p>\n<blockquote>\n<p>根据图，生成一个json，json包括了options、nodes、edges</p>\n</blockquote>\n<p><code>json.read(json)</code>:</p>\n<blockquote>\n<p>根据一段json结构，生成一个graph</p>\n</blockquote>\n<h1 id=\"二、dagre\"><a href=\"#二、dagre\" class=\"headerlink\" title=\"二、dagre\"></a>二、dagre</h1><blockquote>\n<p><a href=\"https://github.com/dagrejs/dagre/wiki\">https://github.com/dagrejs/dagre/wiki</a></p>\n</blockquote>\n<h2 id=\"layout方法\"><a href=\"#layout方法\" class=\"headerlink\" title=\"layout方法\"></a><code>layout</code>方法</h2><p><code>layout(graph,config)=&gt;</code>:</p>\n<p>生成绘制树，config参数说明如下：</p>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>rankdir</td>\n<td>TB</td>\n<td>排列节点的方向，T是上，B是下，L是左，R是右</td>\n</tr>\n<tr>\n<td>align</td>\n<td>undefined</td>\n<td>排列节点的对齐方式，U&#x3D;上，D&#x3D;下，L&#x3D;左，R&#x3D;右</td>\n</tr>\n<tr>\n<td>nodesep</td>\n<td>50</td>\n<td>节点的水平间距</td>\n</tr>\n<tr>\n<td>edgesep</td>\n<td>10</td>\n<td>线的水平间距</td>\n</tr>\n<tr>\n<td>ranksep</td>\n<td>50</td>\n<td>排列间距，就是层间距</td>\n</tr>\n<tr>\n<td>marginx</td>\n<td>0</td>\n<td>图的左右间距</td>\n</tr>\n<tr>\n<td>marginy</td>\n<td>0</td>\n<td>图上下间距</td>\n</tr>\n<tr>\n<td>acyclicer</td>\n<td>undefined</td>\n<td>环模式，如果设置为<code>greedy</code>，则会返回可移除的边列表，使图无环</td>\n</tr>\n<tr>\n<td>ranker</td>\n<td><code>network-simplex</code></td>\n<td>使用哪种布局算法，默认是<code>network-simplex</code>，可选的还有<code>tight-tree</code>,<code>longest-path</code></td>\n</tr>\n<tr>\n<td>width</td>\n<td>0</td>\n<td>节点宽度</td>\n</tr>\n<tr>\n<td>height</td>\n<td>0</td>\n<td>节点高度</td>\n</tr>\n<tr>\n<td>minlen</td>\n<td>1</td>\n<td>线的最小长度</td>\n</tr>\n<tr>\n<td>weight</td>\n<td>1</td>\n<td>线的权重，权重越高，线越短直</td>\n</tr>\n<tr>\n<td>width</td>\n<td>0</td>\n<td>线的label的宽度</td>\n</tr>\n<tr>\n<td>height</td>\n<td>0</td>\n<td>线的label的高度</td>\n</tr>\n<tr>\n<td>labelpos</td>\n<td><code>r</code></td>\n<td>线的label的位置，l&#x3D;左，c&#x3D;中间，r&#x3D;右侧</td>\n</tr>\n<tr>\n<td>labeloffset</td>\n<td>10</td>\n<td>label和边的距离，当label的定位是<code>l</code>和<code>r</code>时生效</td>\n</tr>\n</tbody></table>\n<p>生成布局图的一些属性</p>\n<table>\n<thead>\n<tr>\n<th>范围</th>\n<th>值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>graph</td>\n<td>height</td>\n<td>图的高度</td>\n</tr>\n<tr>\n<td>graph</td>\n<td>width</td>\n<td>图的宽度</td>\n</tr>\n<tr>\n<td>node，edge</td>\n<td>x，y</td>\n<td>节点的中心坐标，或者线的中心坐标</td>\n</tr>\n<tr>\n<td>edge</td>\n<td>points</td>\n<td>{x，y}构成的线的控制点</td>\n</tr>\n</tbody></table>\n","site":{"data":{}},"more":"<h1 id=\"一、graphlib\"><a href=\"#一、graphlib\" class=\"headerlink\" title=\"一、graphlib\"></a>一、graphlib</h1><blockquote>\n<p><a href=\"https://juejin.cn/post/7079732431116304397#heading-44\">https://juejin.cn/post/7079732431116304397#heading-44</a></p>\n</blockquote>\n<p>导出内容：</p>\n<ul>\n<li><code>Graph</code> : Graph类，提供了图的各种操作方法</li>\n<li><code>json</code> : 工具函数，用于图转为json，或者由json格式化一个图</li>\n<li><code>alg</code> : 图的各种算法实现</li>\n</ul>\n<h2 id=\"1、Graph类\"><a href=\"#1、Graph类\" class=\"headerlink\" title=\"1、Graph类\"></a>1、<code>Graph</code>类</h2><h3 id=\"构造函数\"><a href=\"#构造函数\" class=\"headerlink\" title=\"构造函数\"></a>构造函数</h3><figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ts\">directed?: <span class=\"hljs-built_in\">boolean</span>; <span class=\"hljs-comment\">// default: true. 是否为有向图</span><br>multigraph?: <span class=\"hljs-built_in\">boolean</span>; <span class=\"hljs-comment\">// default: false.两节点之间，是否允许多个边</span><br>compound?: <span class=\"hljs-built_in\">boolean</span>; <span class=\"hljs-comment\">// default: false.图是否允许复合点</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"实例方法\"><a href=\"#实例方法\" class=\"headerlink\" title=\"实例方法\"></a>实例方法</h3><p><code>graph.setGraph(value)</code>:</p>\n<blockquote>\n<p>设置整个graph的值，一些graph的参数，如宽高等，一般是设置一个空对象</p>\n</blockquote>\n<p><code>graph.graph()</code>:</p>\n<blockquote>\n<p>获取graph的值</p>\n</blockquote>\n<p><code>graph.setNode(node_id,[value])</code>:</p>\n<blockquote>\n<p>在图中创建或更新节点的值，</p>\n</blockquote>\n<p><code>graph.removeNode(node_id)</code>:</p>\n<blockquote>\n<p>移除某个节点，同时会移除这个节点的边</p>\n</blockquote>\n<p><code>graph.setEdge(node_id1,node_id2,label,[name])</code>:</p>\n<blockquote>\n<p>给两个节点设置或更新边信息</p>\n</blockquote>\n<p><code>graph.removeEdge(node_id1,node_id2)</code>:</p>\n<blockquote>\n<p>移除两个节点的边</p>\n</blockquote>\n<p><code>graph.setDefaultNodeLabel(obj)</code>:</p>\n<blockquote>\n<p>设置一个默认的节点value,可以是一个函数(node)&#x3D;&gt;obj</p>\n</blockquote>\n<p><code>graph.setDefaultEdgeLabel(obj)</code>:</p>\n<blockquote>\n<p>给边设置一个默认的节点</p>\n</blockquote>\n<p><code>graph.nodes()</code>:</p>\n<blockquote>\n<p>获取所有的节点，返回节点id的列表</p>\n</blockquote>\n<p><code>graph.node(id)</code>:</p>\n<blockquote>\n<p>根据id，查询节点信息</p>\n</blockquote>\n<p><code>graph.edges()</code>:</p>\n<blockquote>\n<p>获取所有的边，返回边列表</p>\n</blockquote>\n<p><code>graph.edge(source_id,target_id)</code>:</p>\n<blockquote>\n<p>根据起始的节点id，查询一条边</p>\n</blockquote>\n<p><code>graph.sources()</code>:</p>\n<blockquote>\n<p>返回没有入边的节点</p>\n</blockquote>\n<p><code>graph.sinks()</code>:</p>\n<blockquote>\n<p>返回所有没有出边的节点</p>\n</blockquote>\n<p><code>graph.predecessors(node_id)</code>:</p>\n<blockquote>\n<p>返回当前节点的所有的祖先节点</p>\n</blockquote>\n<p><code>graph.parent(node_id)</code>:</p>\n<blockquote>\n<p>返回当前节点的父节点（TODO: 和predecessors区别是什么）</p>\n</blockquote>\n<p><code>graph.successors(node_id)</code>:</p>\n<blockquote>\n<p>返回当前节点的所有后序节点</p>\n</blockquote>\n<p><code>graph.children(node_id)</code>:</p>\n<blockquote>\n<p>返回当前节点的所有子节点</p>\n</blockquote>\n<p><code>graph.inEdges(node_id)</code>:</p>\n<blockquote>\n<p>查询某个节点的所有入边</p>\n</blockquote>\n<p><code>graph.outEdges(node_id)</code>:</p>\n<blockquote>\n<p>查询某个节点的所有出边</p>\n</blockquote>\n<p><code>graph.nodeEdges(node_id)</code>:</p>\n<blockquote>\n<p>查询某个节点，所有的边，包括入边和出边</p>\n</blockquote>\n<h2 id=\"2、alg算法工具类\"><a href=\"#2、alg算法工具类\" class=\"headerlink\" title=\"2、alg算法工具类\"></a>2、<code>alg</code>算法工具类</h2><h2 id=\"3、json转换工具\"><a href=\"#3、json转换工具\" class=\"headerlink\" title=\"3、json转换工具\"></a>3、<code>json</code>转换工具</h2><p><code>json.write(graph)</code>:</p>\n<blockquote>\n<p>根据图，生成一个json，json包括了options、nodes、edges</p>\n</blockquote>\n<p><code>json.read(json)</code>:</p>\n<blockquote>\n<p>根据一段json结构，生成一个graph</p>\n</blockquote>\n<h1 id=\"二、dagre\"><a href=\"#二、dagre\" class=\"headerlink\" title=\"二、dagre\"></a>二、dagre</h1><blockquote>\n<p><a href=\"https://github.com/dagrejs/dagre/wiki\">https://github.com/dagrejs/dagre/wiki</a></p>\n</blockquote>\n<h2 id=\"layout方法\"><a href=\"#layout方法\" class=\"headerlink\" title=\"layout方法\"></a><code>layout</code>方法</h2><p><code>layout(graph,config)=&gt;</code>:</p>\n<p>生成绘制树，config参数说明如下：</p>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>rankdir</td>\n<td>TB</td>\n<td>排列节点的方向，T是上，B是下，L是左，R是右</td>\n</tr>\n<tr>\n<td>align</td>\n<td>undefined</td>\n<td>排列节点的对齐方式，U&#x3D;上，D&#x3D;下，L&#x3D;左，R&#x3D;右</td>\n</tr>\n<tr>\n<td>nodesep</td>\n<td>50</td>\n<td>节点的水平间距</td>\n</tr>\n<tr>\n<td>edgesep</td>\n<td>10</td>\n<td>线的水平间距</td>\n</tr>\n<tr>\n<td>ranksep</td>\n<td>50</td>\n<td>排列间距，就是层间距</td>\n</tr>\n<tr>\n<td>marginx</td>\n<td>0</td>\n<td>图的左右间距</td>\n</tr>\n<tr>\n<td>marginy</td>\n<td>0</td>\n<td>图上下间距</td>\n</tr>\n<tr>\n<td>acyclicer</td>\n<td>undefined</td>\n<td>环模式，如果设置为<code>greedy</code>，则会返回可移除的边列表，使图无环</td>\n</tr>\n<tr>\n<td>ranker</td>\n<td><code>network-simplex</code></td>\n<td>使用哪种布局算法，默认是<code>network-simplex</code>，可选的还有<code>tight-tree</code>,<code>longest-path</code></td>\n</tr>\n<tr>\n<td>width</td>\n<td>0</td>\n<td>节点宽度</td>\n</tr>\n<tr>\n<td>height</td>\n<td>0</td>\n<td>节点高度</td>\n</tr>\n<tr>\n<td>minlen</td>\n<td>1</td>\n<td>线的最小长度</td>\n</tr>\n<tr>\n<td>weight</td>\n<td>1</td>\n<td>线的权重，权重越高，线越短直</td>\n</tr>\n<tr>\n<td>width</td>\n<td>0</td>\n<td>线的label的宽度</td>\n</tr>\n<tr>\n<td>height</td>\n<td>0</td>\n<td>线的label的高度</td>\n</tr>\n<tr>\n<td>labelpos</td>\n<td><code>r</code></td>\n<td>线的label的位置，l&#x3D;左，c&#x3D;中间，r&#x3D;右侧</td>\n</tr>\n<tr>\n<td>labeloffset</td>\n<td>10</td>\n<td>label和边的距离，当label的定位是<code>l</code>和<code>r</code>时生效</td>\n</tr>\n</tbody></table>\n<p>生成布局图的一些属性</p>\n<table>\n<thead>\n<tr>\n<th>范围</th>\n<th>值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>graph</td>\n<td>height</td>\n<td>图的高度</td>\n</tr>\n<tr>\n<td>graph</td>\n<td>width</td>\n<td>图的宽度</td>\n</tr>\n<tr>\n<td>node，edge</td>\n<td>x，y</td>\n<td>节点的中心坐标，或者线的中心坐标</td>\n</tr>\n<tr>\n<td>edge</td>\n<td>points</td>\n<td>{x，y}构成的线的控制点</td>\n</tr>\n</tbody></table>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cllx7u0g00000ecvic0r2hu1l","category_id":"cllx7u0g40001ecvi0vg0gc1p","_id":"cllx7u0g60004ecvi1zpn8lzl"}],"PostTag":[{"post_id":"cllx7u0g00000ecvic0r2hu1l","tag_id":"cllx7u0g50002ecvifs327rlg","_id":"cllx7u0g60005ecvicspndlhp"},{"post_id":"cllx7u0g00000ecvic0r2hu1l","tag_id":"cllx7u0g50003ecvi0cawg4jr","_id":"cllx7u0g60006ecvid4pfb4dm"}],"Tag":[{"name":"算法","_id":"cllx7u0g50002ecvifs327rlg"},{"name":"图结构自动布局","_id":"cllx7u0g50003ecvi0cawg4jr"}]}}